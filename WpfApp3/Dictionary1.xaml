<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfApp3">
    <Style x:Key="TB" TargetType="TextBox">
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="Height" Value="35"></Setter>
        <Setter Property="Foreground" Value="#ED3334"></Setter>
        <Setter Property="FontSize" Value="13"></Setter>
        <Setter Property="BorderBrush" Value="#ED3334"></Setter>
        <Setter Property="Padding" Value="10,0,0,0"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="root" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" SnapsToDevicePixels="True">
                        <Border x:Name="background" BorderThickness="2" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"></Border>
                        <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Padding="{TemplateBinding Padding}" IsTabStop="False" Background="{x:Null}" TextElement.Foreground="{TemplateBinding Foreground}"></ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Azure"></Setter>

                        </Trigger>
                        <!--<Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="#FFE2EDED"></Setter>
                                <Setter Property="BorderBrush" Value="DarkOrchid"/>              ДОДЕЛАТЬ ФОКУС
                            </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="Text" TargetType="TextBlock">
        <!--Foreground="#FFEE2020" FontSize="29" FontWeight="Bold"-->
        <Setter Property="Foreground" Value="#FFEE2020"/>
        <Setter Property="FontSize" Value="29"/>
        <Setter Property="FontWeight" Value="Bold"/>


    </Style>

    <Style x:Key="menu" TargetType="Menu">
        

    </Style>


    <Style x:Key="RoundCorner" TargetType="{x:Type Button}">

        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!--<Setter Property="Padding" Value="1"/>-->
        
        <Setter Property="Template">
           
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="10" BorderBrush="#FFDA3838" BorderThickness="1">
                            <Border.Background >
                                <SolidColorBrush Color="#FFDA3838">
                                    
                                </SolidColorBrush>
                              
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold">
                            </ContentPresenter>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#D81212"/>


                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#D81212"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type DataGrid}" x:Key="DG">
        
        <Setter Property="Foreground"
          Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1"
                           StartPoint="0.5,0">
                    <GradientStop Color="{DynamicResource BorderLightColor}"
                      Offset="0" />
                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                      Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness"
          Value="1" />
        <Setter Property="RowDetailsVisibilityMode"
          Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll"
          Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
          Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
          Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border x:Name="border"
                SnapsToDevicePixels="True"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}">
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Panel.Background).
                      (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{DynamicResource ControlLightColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer x:Name="DG_ScrollViewer"
                        Focusable="false"
                        Background="Black">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <Button Focusable="false"
                          Command="{x:Static DataGrid.SelectAllCommand}"
                          Style="{DynamicResource {ComponentResourceKey 
                      ResourceId=DataGridSelectAllButtonStyle, 
                      TypeInTargetAssembly={x:Type DataGrid}}}"
                          Visibility="{Binding HeadersVisibility, 
                      ConverterParameter={x:Static DataGridHeadersVisibility.All}, 
                      Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                      RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                          Width="{Binding CellsPanelHorizontalOffset, 
                      RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                  Grid.Column="1"
                                                  Visibility="{Binding HeadersVisibility, 
                      ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                      Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                      RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                          Grid.ColumnSpan="2"
                                          Grid.Row="1"
                                          CanContentScroll="{TemplateBinding CanContentScroll}" />

                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                             Grid.Column="2"
                             Grid.Row="1"
                             Orientation="Vertical"
                             ViewportSize="{TemplateBinding ViewportHeight}"
                             Maximum="{TemplateBinding ScrollableHeight}"
                             Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                             Value="{Binding VerticalOffset, Mode=OneWay, 
                      RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <Grid Grid.Column="1"
                        Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, 
                          RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                               Grid.Column="1"
                               Orientation="Horizontal"
                               ViewportSize="{TemplateBinding ViewportWidth}"
                               Maximum="{TemplateBinding ScrollableWidth}"
                               Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                               Value="{Binding HorizontalOffset, Mode=OneWay, 
                        RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment"
                 Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsGrouping"
             Value="true">
                <Setter Property="ScrollViewer.CanContentScroll"
              Value="false" />
            </Trigger>
        </Style.Triggers>
        
    </Style>

    <Style x:Key="ButRoundCorner" TargetType="{x:Type Button}">

        <!--<Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>-->
        <!--<Setter Property="Padding" Value="1"/>-->
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Template">
    
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="2" BorderBrush="#FFDA3838" BorderThickness="2">
                            <Border.Background >
                                <SolidColorBrush Color="White">

                                </SolidColorBrush>

                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold">
                            </ContentPresenter>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="Azure"/>


                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFDA3838"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="{x:Type TextBox}" x:Key="TBDetail" >
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="White"/>
    </Style>

    <Style x:Key="mainButton" TargetType="{x:Type Button}">
        
    </Style>

    <Style x:Key="menuMain" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="AliceBlue" />
        
        

    </Style>

    <Style x:Key="menuItemMain" TargetType="MenuItem">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="auto"/>
        <Setter Property="Margin" Value="8"/>
        <!--<Setter Property="Width" Value="150"/>-->
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="5"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background"  Value="White"/>
                <!--<Setter Property="Opacity" Value="0.8"/>-->
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="Black"/>

            </Trigger>
        </Style.Triggers>
    </Style>
    
    <ControlTemplate x:Key="VsMenuTop" TargetType="MenuItem">
        <StackPanel TextBlock.FontSize="15px" Height="40">
            <!-- label, icons, etc. -->
            <Label Content="{TemplateBinding Header}" Margin="5" Foreground="White" />

            <!-- sub items -->
            <Popup IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False">
                <Border BorderThickness="1" Background="White" BorderBrush="#E0E0E0">
                    <StackPanel IsItemsHost="True" />
                </Border>
            </Popup>
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver"  Value="True">
                            <Setter Property="Background" Value="#106EBE" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
        </StackPanel>
    </ControlTemplate>

    <!-- style a non-top level menu item -->
    <ControlTemplate x:Key="VsMenuSub" TargetType="MenuItem">
        <DockPanel TextBlock.FontSize="15px" x:Name="panel">
            <!-- label, icons, etc. -->
            <Image Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" Width="20" Margin="5,0" />
            <Label Content="{TemplateBinding Header}" Foreground="Black" Margin="0,5,5,5" />

            <!-- draw the right arrow only if this menu item has sub items -->
            <Image Source="icon_right.png" Visibility="{Binding HasItems, Converter={StaticResource btv}, RelativeSource={RelativeSource TemplatedParent}}" />

            <!-- sub items -->
            <Popup IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" Placement="Right" >
                <Border BorderThickness="1" Background="White" BorderBrush="#E0E0E0">
                    <StackPanel IsItemsHost="True" />
                </Border>
            </Popup>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="panel" Value="#EFF6FC" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- style the separator -->
    <ControlTemplate x:Key="VsMenuSep" TargetType="Separator">
        <Border Height="1" Background="#E0E0E0" />
    </ControlTemplate>

    <!-- style the VSOnline -->
    <ControlTemplate x:Key="VsOnline" TargetType="MenuItem">
        <StackPanel TextBlock.FontSize="15px" Height="40" Orientation="Horizontal" Background="#005A9E">
            <Label Content="{TemplateBinding Header}" Margin="5" Foreground="White" />
            <Image Source="icon_down.png" Height="20" Margin="0,0,5,0" />

            <!-- sub items -->
            <Popup IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False">
                <Border BorderThickness="1" Background="White" BorderBrush="#E0E0E0">
                    <StackPanel IsItemsHost="True" />
                </Border>
            </Popup>
        </StackPanel>
    </ControlTemplate>

    <Style TargetType="TextBox" x:Key="AddFormTB">
        <Setter Property="AcceptsReturn" Value="True"></Setter>
        <Setter Property="VerticalScrollBarVisibility" Value="Visible"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
        <Setter Property="UndoLimit" Value="4000"/>
    </Style>

    <Style x:Key="MouseOverButtonStyle" TargetType="Button">
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="2" BorderBrush="#fff" BorderThickness="2">
                            <Border.Background >
                                <SolidColorBrush Color="White">

                                </SolidColorBrush>

                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold">
                            </ContentPresenter>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="White"/>


                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#fff"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="TabItem" x:Key="tabItem">
        <Setter Property="Background" Value="AntiqueWhite"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        

    </Style>

</ResourceDictionary>